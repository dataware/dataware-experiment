Stuff that's missing / questions

* a third party client currently has no way, in the set of exchanges, of getting the end point url of the processor that will undertake the final processing request

* how does a resource bootstrap it's schema and details with it's dataware wrapper?

* How are queries that can be performed on data made available for third parties to browse and construct their own queries on?

* How are processes that are to be run DESCRIBED

* should resource offer access to data via a set of restful interfaces rather than through snadboxed python? 

Third party clients:

1st: Register with a catalog {need to ensure that this can only be done ONCE}

2nd: Query catalog: get list of resources available for installing a processor: {catalog, resourcename, resourceownerscatalogname, url of processing entity}


PROTOCOL THAT ALLOWS THE DATAWARE RESOURCE TO QUERY THE THIRD PARTY CLIENT:


Registration
------------
Third party client registers with catalog.  

When the TPC generates a processing request, as a part of the request, it sends a callback url.

When the TPC processing request is accepted, an access token is generated by the dataware resource.

Execution
---------

When the TPC requests an execution, it also provides a view url, which when posted to with the correct credentials will display the data to the hwresource. [yes - simpler]



